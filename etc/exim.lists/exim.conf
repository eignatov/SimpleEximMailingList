# Mailing list policies
# membersonly: Mails from foreign senders are rejected
# moderate: Mails from foreign senders are sent for moderation
# allowall: Mails from foreign senders are accepted
# adminonly: Only admins can write on the list, all others are rejected
# adminmoderatenoforeigns: Only admins can write on the list, members are sent for moderation, others are rejected
# adminmoderate: Only admins can write on the list, others are sent for moderation

# ACL variables
ACL_MAILTYPE=acl_m0
ACL_LISTID=acl_m1
ACL_LISTPOLICY=acl_m2
ACL_ISMEMBER=acl_m3
ACL_ISADMIN=acl_m4
ACL_MODERATION=acl_m5
ACL_SERVICE=acl_m6
ACL_LOCALPART=acl_m7
ACL_DOMAIN=acl_m8
ACL_SENDER=acl_m9

# Include the following settings:
# HOSTNAME - The FQDN of the mailing list server
# IPADDRESS - The IP address of the server to use as a receiving and sending address

.include /etc/exim.lists/settings.conf

primary_hostname        =    HOSTNAME
local_interfaces        =    IPADDRESS

smtp_banner             =    $primary_hostname Mailing List Server
received_header_text    =    Received: ${if def:sender_rcvhost {from $sender_rcvhost\n\t}{${if def:sender_ident {from ${quote_local_part:$sender_ident} }}${if def:sender_helo_name {(helo=$sender_helo_name)\n\t}}}}by $primary_hostname ${if def:received_protocol {with $received_protocol}} ${if def:tls_cipher {($tls_cipher)\n\t}}${if def:sender_address {(envelope-from <$sender_address>)\n\t}}id $message_exim_id${if def:received_for {\n\tfor $received_for}}

host_lookup             =    *

rfc1413_hosts           =
rfc1413_query_timeout   =    0s

acl_smtp_rcpt = acl_check_rcpt

begin acl
    acl_check_rcpt:
        deny    message        =    Restricted characters in address.
                local_parts    =    ^[.] : ^.*[@%!/|]
        warn    set    acl_m7  =    $local_part
        warn    set    acl_m8  =    $domain
        warn    set    acl_m9  =    $sender_address
        # Mailing list address.
        accept  local_parts    =    ^\^[a-zA-Z0-9]+\$
                acl            =    acl_list_submission
        # Bounce messages
        accept    local_parts  =    
            senders            =    :
            acl                =    acl_list_bounce
        deny    message        =    The original message of this bounce does not originate here, we\
                                    use VERP. Fix your mailserver.
                senders        =    :
        # Service address without service code
        accept    local_parts  =    ^\^[a-zA-Z0-9]+-(subscribe|owner)\$
                  acl          =    acl_list_service
        # Service address with service code
        accept    local_parts  =    ^\^[a-zA-Z0-9]+-(subscribe|unsubscribe)-[a-zA-Z0-9]+\$
                  acl          =    acl_list_service_code
        deny    message        =    This address is not hosted here.
    acl_verify_list:
        deny    condition      =    ${lookup mysql{QUERY_LISTLOOKUP}{false}{true}}
        warn    set    acl_m1  =    ${lookup mysql{QUERY_LISTLOOKUP}}
        warn    set    acl_m2  =    ${lookup mysql{QUERY_LISTPOLICY}}
        warn    set    acl_m3  =    ${if eq{${lookup mysql{QUERY_ISMEMBER}{$value}{0}}}{1} {true}{false}}
        warn    set    acl_m4  =    ${if eq{${lookup mysql{QUERY_ISADMIN}{$value}{0}}}{1} {true}{false}}
        accept
    acl_list_submission:
        warn    set    acl_m0  =    submission
        require message        =    This mailing list does not exist.
            acl                =    acl_verify_list
        warn    set    acl_m5  =    false
                # Reject non-members for members-only or admin-only lists.
        deny    message        =    This list is for members only.
                log_message    =    Message from ${quote:$sender_address} is rejected, because this\
                                    list is members-only or admin-only with no foreign mails allowed.
                condition      =    ${if and{\
                                        {eq{$ACL_ISMEMBER}{false}}\
                                            {or{\
                                                {eq{$ACL_LISTPOLICY}{membersonly}}\
                                                {eq{$ACL_LISTPOLICY}{adminmoderatenoforeigns}}\
                                            }}\
                                    }}
        # Reject non-admin members for admin-only lists
        deny    message        =    Only admins can write on this list.
            log_message        =    Message from ${quote:$sender_address} is rejected, because this list is admin-only
            condition          =    ${if and{\
                                        {eq{$ACL_ISADMIN}{false}}\
                                        {eq{$ACL_LISTPOLICY}{adminonly}}\
                                    }}
        # Send mail for moderation for non-member moderation policy lists.
        warn    set    acl_m5  =    true
            log_message        =    Message from ${quote:$sender_address} is sent for moderation,\
                                                        because the sender is no on the list and the list policy is\
                                                        moderation.
            condition          =    ${if and{\
                                        {eq{$ACL_ISMEMBER}{false}}\
                                        {eq{$ACL_LISTPOLICY}{moderate}}\
                                    }}
        # Send mail for moderation for non-admin moderation policy lists.
        warn    set    acl_m5  =    true
                log_message    =    Message from ${quote:$sender_address} is sent for moderation,\
                                    because the sender os not an admin of this list and the list\
                                    policy is adminonly with moderation.
                condition      =    ${if and{\
                                        {eq{$ACL_ISADMIN}{false}}\
                                        {or{\
                                            {eq{$ACL_LISTPOLICY}{adminmoderate}}\
                                            {eq{$ACL_LISTPOLICY}{adminmoderatenoforeigns}}\
                                        }}\
                                    }}
        accept
    acl_list_bounce:
        warn    set    acl_m0  =    bounce
        deny
    acl_list_service:
        warn    set    acl_m0  =    service
        warn    set    acl_m7  =    ${sg{$local_part}{-.*}{}}
        require message        =    This mailing list does not exist.
                acl            =    acl_verify_list
        warn    set    acl_m6  =    ${sg{$local_part}{.*-}{}}
        accept    condition    =    ${if eq{$ACL_SERVICE}{owner}}
        accept    condition    =    ${if eq{$ACL_SERVICE}{subscribe}}
        deny
    acl_list_service_code:
        warn    set    acl_m0  =    servicecode
        warn    set    acl_m7  =    ${sg{$local_part}{-.*}{}}
        require    message     =    This mailing list does not exist.
            acl                =    acl_verify_list
        deny
begin routers
    # Drop automatically submitted messages to submission and service addresses.
    drop_autosubmitted:
        condition              =    ${if and{\
                                        {\
                                            or{\
                                                {\
                                                    eq{$ACL_MAILTYPE}{submission}\
                                                }{\
                                                    eq{$ACL_MAILTYPE}{servicecode}\
                                                }\
                                            }\
                                        }{\
                                            or{\
                                                { match {$h_precedence:} {(?i)junk|bulk|list} } \
                                                { eq {$sender_address} {} } \
                                                { def:header_X-Cron-Env: } \
                                                { def:header_Auto-Submitted: } \
                                                { def:header_List-Id: } \
                                                { def:header_List-Help: } \
                                                { def:header_List-Unsubscribe:} \
                                                { def:header_List-Subscribe: } \
                                                { def:header_List-Owner: } \
                                                { def:header_List-Post: } \
                                                { def:header_List-Archive: } \
                                                { def:header_Autorespond: } \
                                                { def:header_X-Autoresponse: } \
                                                { def:header_X-Autoreply-From: } \
                                                { def:header_X-eBay-MailTracker: } \
                                                { def:header_X-MaxCode-Template: } \
                                                { match {$h_X-Auto-Response-Suppress: } {OOF} } \
                                                { match {$h_X-OS:} {HP Onboard Administrator} } \
                                                { match {$h_X-MimeOLE:} {\N^Produced By phpBB2$\N} } \
                                                { match {$h_Subject:} {\N^Yahoo! Auto Response$\N} } \
                                                { match {$h_Subject:} {\N^ezmlm warning$\N} } \
                                                { match {$h_X-FC-MachineGenerated:} {true} } \
                                                { match {$message_body} {\N^Your \"cron\" job on\N} } \
                                                { match {$h_Subject:} {\N^Out of Office\N} } \
                                                { match {$h_Subject:} {\N^Auto-Reply:\N} } \
                                                { match {$h_Subject:} {\N^Autoresponse:\N} } \
                                                { match {$h_Subject:} {\N(Auto Reply)$\N} } \
                                                { match {$h_Subject:} {\N(Out of Office)$\N} } \
                                                { match {$h_Subject:} {\Nis out of the office.$\N} } \
                                                { match {$h_From:} {\N(via the vacation program)\N } } \
                                            }\
                                        }\
                                    }}
        driver                 =    redirect
        data                   =    :blackhole:
    # Redirect submission messages to list members and rewrite reply-to address. Also remove DKIM and old reply-to
    # headers.
    redirect_submissions:
        condition              =    ${if eq{$ACL_MAILTYPE}{submission}}
        driver                 =    redirect
        headers_remove         =    DKIM-Signature : Reply-To
        headers_add            =    Reply-To: ${local_part}@${domain}
        data                   =    ${lookup mysql{QUERY_LISTMEMBERS}}
    # Redirect messages to list owners.
    redirect_admins:
        condition              =    ${if and{{eq{$ACL_MAILTYPE}{service}}{eq{$ACL_SERVICE}{owner}}}}
        driver                 =    redirect
        data                   =    ${lookup mysql{QUERY_LISTADMINS}}
    # Send subscribe requests to subscribe handlers.
    reply_subscribe_requests:
        condition              =    ${if and{{eq{$ACL_MAILTYPE}{service}}{eq{$ACL_SERVICE}{subscribe}}}}
        driver                 =    accept
        transport              =    subscription_confirmation
    # Send remote messages to remote addresses.
    remote_smtp:
        driver                 =    dnslookup
        transport              =    remote_smtp
begin transports
    # Send confirmation mail to subscribe requests.
    subscription_confirmation:
        driver                 =    autoreply
        to                     =    <$ACL_SENDER>
        from                   =    List Administrator <${ACL_LOCALPART}-subscribe-ABC1234@${ACL_DOMAIN}>
        subject                =    Re: $h_subject:
        file                   =    /etc/exim.lists/subscription.txt
        file_expand
        # Remote mail transport
    remote_smtp:
        driver                 =    smtp
        allow_localhost        =    true
        interface              =    IPADDRESS
begin retry
    *    *    F,2h,15m; G,16h,1h,1.5; F,4d,6h
